from xvision.utils.config import CfgNode as CN

_C = CN()
cfg = _C

_C.workdir = 'workspace/fa'
_C.dsize = 112
_C.padding = 0.2
_C.lr = 0.2
_C.momentum = 0.9
_C.weight_decay = 5e-4
_C.batch_size = 256
_C.start_step = 0       # for resume
_C.total_steps = 10000   # training steps
_C.num_workers = 8
_C.eval_interval = 5    # evaluate interval
_C.left_eye = [66, 70]
_C.right_eye = [75, 79]

_C.model = CN(recursive=False)
_C.model.name = 'mbv2'
# datasets

_C.wflw = 'path/to/wflw/data'
_C.ibug = 'path/to/ibug/data'
_C.jdlmk = '/Users/jimmy/Documents/data/FA/JD-landmark/'


# data information
_C.data = CN()
_C.data.name = 'WFLW'
_C.data.train = CN()  # train dataset kwargs
_C.data.train.label_file = '/Users/jimmy/Documents/Data/WFLW/WFLW_annotations/list_98pt_rect_attr_train_test/list_98pt_rect_attr_train.txt'
_C.data.train.image_dir = '/Users/jimmy/Documents/Data/WFLW/WFLW_images'
_C.data.val = CN()
_C.data.val.label_file = '/Users/jimmy/Documents/Data/WFLW/WFLW_annotations/list_98pt_rect_attr_train_test/list_98pt_rect_attr_test.txt' # val set kwargs
_C.data.val.image_dir = '/Users/jimmy/Documents/Data/WFLW/WFLW_images'
_C.data.symmetry = [32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18,
                    17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1,
                    0, 46, 45, 44, 43, 42, 50, 49, 48, 47, 37, 36, 35, 34, 33, 41,
                    40, 39, 38, 51, 52, 53, 54, 59, 58, 57, 56, 55, 72, 71, 70, 69,
                    68, 75, 74, 73, 64, 63, 62, 61, 60, 67, 66, 65, 82, 81, 80, 79,
                    78, 77, 76, 87, 86, 85, 84, 83, 92, 91, 90, 89, 88, 95, 94, 93,
                    97, 96]
_C.data.meanshape = [[0.0000, 0.1501],
                     [0.0031, 0.2167],
                     [0.0063, 0.2834],
                     [0.0110, 0.3501],
                     [0.0184, 0.4165],
                     [0.0299, 0.4823],
                     [0.0463, 0.5469],
                     [0.0684, 0.6097],
                     [0.0971, 0.6696],
                     [0.1319, 0.7260],
                     [0.1723, 0.7784],
                     [0.2170, 0.8268],
                     [0.2652, 0.8712],
                     [0.3167, 0.9113],
                     [0.3728, 0.9442],
                     [0.4345, 0.9659],
                     [0.5000, 0.9731],
                     [0.5655, 0.9660],
                     [0.6272, 0.9442],
                     [0.6833, 0.9112],
                     [0.7348, 0.8713],
                     [0.7830, 0.8267],
                     [0.8277, 0.7784],
                     [0.8681, 0.7260],
                     [0.9030, 0.6696],
                     [0.9316, 0.6097],
                     [0.9538, 0.5469],
                     [0.9701, 0.4823],
                     [0.9816, 0.4165],
                     [0.9890, 0.3501],
                     [0.9937, 0.2835],
                     [0.9969, 0.2167],
                     [1.0000, 0.1500],
                     [0.1280, 0.0897],
                     [0.1948, 0.0317],
                     [0.2662, 0.0270],
                     [0.3377, 0.0365],
                     [0.4075, 0.0546],
                     [0.4072, 0.0987],
                     [0.3375, 0.0841],
                     [0.2661, 0.0745],
                     [0.1950, 0.0758],
                     [0.5925, 0.0545],
                     [0.6623, 0.0364],
                     [0.7338, 0.0269],
                     [0.8052, 0.0316],
                     [0.8720, 0.0898],
                     [0.8050, 0.0758],
                     [0.7339, 0.0745],
                     [0.6625, 0.0840],
                     [0.5928, 0.0988],
                     [0.5000, 0.1775],
                     [0.5000, 0.2673],
                     [0.5000, 0.3568],
                     [0.5000, 0.4415],
                     [0.3915, 0.4809],
                     [0.4454, 0.4935],
                     [0.5000, 0.5042],
                     [0.5546, 0.4935],
                     [0.6085, 0.4808],
                     [0.1969, 0.1797],
                     [0.2372, 0.1556],
                     [0.2843, 0.1456],
                     [0.3389, 0.1546],
                     [0.3814, 0.1885],
                     [0.3333, 0.2030],
                     [0.2827, 0.2070],
                     [0.2376, 0.1991],
                     [0.6186, 0.1886],
                     [0.6611, 0.1547],
                     [0.7157, 0.1455],
                     [0.7628, 0.1556],
                     [0.8031, 0.1798],
                     [0.7624, 0.1992],
                     [0.7173, 0.2070],
                     [0.6667, 0.2030],
                     [0.3080, 0.6298],
                     [0.3794, 0.6005],
                     [0.4629, 0.5902],
                     [0.5000, 0.5916],
                     [0.5371, 0.5903],
                     [0.6206, 0.6005],
                     [0.6920, 0.6298],
                     [0.6429, 0.6853],
                     [0.5778, 0.7266],
                     [0.5000, 0.7407],
                     [0.4222, 0.7266],
                     [0.3572, 0.6853],
                     [0.3222, 0.6327],
                     [0.4088, 0.6246],
                     [0.5000, 0.6267],
                     [0.5912, 0.6245],
                     [0.6778, 0.6327],
                     [0.5950, 0.6696],
                     [0.5000, 0.6843],
                     [0.4050, 0.6698],
                     [0.2878, 0.1762],
                     [0.7122, 0.1762]]

# augments for training
_C.augments = CN()
_C.augments.rotate = 15
_C.augments.scale = 0.2
_C.augments.translate = 0.1
_C.augments.symmetry = _C.data.symmetry
